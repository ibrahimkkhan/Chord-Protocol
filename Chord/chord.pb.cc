// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chord.proto

#include "chord.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chord_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chord_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Node;
}  // namespace protobuf_chord_2eproto
namespace protocol {
class NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Node>
      _instance;
} _Node_default_instance_;
class CallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Call>
      _instance;
} _Call_default_instance_;
class ReturnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Return>
      _instance;
} _Return_default_instance_;
class FindSuccessorArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FindSuccessorArgs>
      _instance;
} _FindSuccessorArgs_default_instance_;
class FindSuccessorRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FindSuccessorRet>
      _instance;
} _FindSuccessorRet_default_instance_;
class NotifyArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyArgs>
      _instance;
} _NotifyArgs_default_instance_;
class NotifyRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyRet>
      _instance;
} _NotifyRet_default_instance_;
class CheckPredecessorArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckPredecessorArgs>
      _instance;
} _CheckPredecessorArgs_default_instance_;
class CheckPredecessorRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckPredecessorRet>
      _instance;
} _CheckPredecessorRet_default_instance_;
class GetPredecessorArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPredecessorArgs>
      _instance;
} _GetPredecessorArgs_default_instance_;
class GetPredecessorRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPredecessorRet>
      _instance;
} _GetPredecessorRet_default_instance_;
class GetSuccessorListArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSuccessorListArgs>
      _instance;
} _GetSuccessorListArgs_default_instance_;
class GetSuccessorListRetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSuccessorListRet>
      _instance;
} _GetSuccessorListRet_default_instance_;
}  // namespace protocol
namespace protobuf_chord_2eproto {
static void InitDefaultsNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_Node_default_instance_;
    new (ptr) ::protocol::Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNode}, {}};

static void InitDefaultsCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_Call_default_instance_;
    new (ptr) ::protocol::Call();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::Call::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Call =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCall}, {}};

static void InitDefaultsReturn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_Return_default_instance_;
    new (ptr) ::protocol::Return();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::Return::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Return =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReturn}, {}};

static void InitDefaultsFindSuccessorArgs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_FindSuccessorArgs_default_instance_;
    new (ptr) ::protocol::FindSuccessorArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::FindSuccessorArgs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FindSuccessorArgs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFindSuccessorArgs}, {}};

static void InitDefaultsFindSuccessorRet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_FindSuccessorRet_default_instance_;
    new (ptr) ::protocol::FindSuccessorRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::FindSuccessorRet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FindSuccessorRet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFindSuccessorRet}, {
      &protobuf_chord_2eproto::scc_info_Node.base,}};

static void InitDefaultsNotifyArgs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_NotifyArgs_default_instance_;
    new (ptr) ::protocol::NotifyArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::NotifyArgs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NotifyArgs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNotifyArgs}, {
      &protobuf_chord_2eproto::scc_info_Node.base,}};

static void InitDefaultsNotifyRet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_NotifyRet_default_instance_;
    new (ptr) ::protocol::NotifyRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::NotifyRet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyRet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyRet}, {}};

static void InitDefaultsCheckPredecessorArgs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_CheckPredecessorArgs_default_instance_;
    new (ptr) ::protocol::CheckPredecessorArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::CheckPredecessorArgs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckPredecessorArgs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckPredecessorArgs}, {}};

static void InitDefaultsCheckPredecessorRet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_CheckPredecessorRet_default_instance_;
    new (ptr) ::protocol::CheckPredecessorRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::CheckPredecessorRet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckPredecessorRet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckPredecessorRet}, {}};

static void InitDefaultsGetPredecessorArgs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_GetPredecessorArgs_default_instance_;
    new (ptr) ::protocol::GetPredecessorArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::GetPredecessorArgs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPredecessorArgs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPredecessorArgs}, {}};

static void InitDefaultsGetPredecessorRet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_GetPredecessorRet_default_instance_;
    new (ptr) ::protocol::GetPredecessorRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::GetPredecessorRet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetPredecessorRet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetPredecessorRet}, {
      &protobuf_chord_2eproto::scc_info_Node.base,}};

static void InitDefaultsGetSuccessorListArgs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_GetSuccessorListArgs_default_instance_;
    new (ptr) ::protocol::GetSuccessorListArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::GetSuccessorListArgs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSuccessorListArgs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSuccessorListArgs}, {}};

static void InitDefaultsGetSuccessorListRet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_GetSuccessorListRet_default_instance_;
    new (ptr) ::protocol::GetSuccessorListRet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::GetSuccessorListRet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetSuccessorListRet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetSuccessorListRet}, {
      &protobuf_chord_2eproto::scc_info_Node.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Call.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Return.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FindSuccessorArgs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FindSuccessorRet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyArgs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyRet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckPredecessorArgs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckPredecessorRet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPredecessorArgs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPredecessorRet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSuccessorListArgs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSuccessorListRet.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Node, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Node, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Node, port_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Call, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Call, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Call, args_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Return, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Return, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Return, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Return, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::FindSuccessorArgs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::FindSuccessorArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::FindSuccessorArgs, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::FindSuccessorRet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::FindSuccessorRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::FindSuccessorRet, node_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::NotifyArgs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::NotifyArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::NotifyArgs, node_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::NotifyRet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::NotifyRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CheckPredecessorArgs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CheckPredecessorArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CheckPredecessorRet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CheckPredecessorRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetPredecessorArgs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetPredecessorArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetPredecessorRet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetPredecessorRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetPredecessorRet, node_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetSuccessorListArgs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetSuccessorListArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetSuccessorListRet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetSuccessorListRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GetSuccessorListRet, successors_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::protocol::Node)},
  { 11, 18, sizeof(::protocol::Call)},
  { 20, 27, sizeof(::protocol::Return)},
  { 29, 35, sizeof(::protocol::FindSuccessorArgs)},
  { 36, 42, sizeof(::protocol::FindSuccessorRet)},
  { 43, 49, sizeof(::protocol::NotifyArgs)},
  { 50, 55, sizeof(::protocol::NotifyRet)},
  { 55, 60, sizeof(::protocol::CheckPredecessorArgs)},
  { 60, 65, sizeof(::protocol::CheckPredecessorRet)},
  { 65, 70, sizeof(::protocol::GetPredecessorArgs)},
  { 70, 76, sizeof(::protocol::GetPredecessorRet)},
  { 77, 82, sizeof(::protocol::GetSuccessorListArgs)},
  { 82, 88, sizeof(::protocol::GetSuccessorListRet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_Call_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_Return_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_FindSuccessorArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_FindSuccessorRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_NotifyArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_NotifyRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_CheckPredecessorArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_CheckPredecessorRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_GetPredecessorArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_GetPredecessorRet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_GetSuccessorListArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_GetSuccessorListRet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "chord.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013chord.proto\022\010protocol\"1\n\004Node\022\n\n\002id\030\001 "
      "\002(\014\022\017\n\007address\030\002 \002(\t\022\014\n\004port\030\003 \002(\r\"\"\n\004Ca"
      "ll\022\014\n\004name\030\001 \002(\t\022\014\n\004args\030\002 \002(\014\"(\n\006Return"
      "\022\017\n\007success\030\001 \002(\010\022\r\n\005value\030\002 \001(\014\"\037\n\021Find"
      "SuccessorArgs\022\n\n\002id\030\001 \002(\014\"0\n\020FindSuccess"
      "orRet\022\034\n\004node\030\001 \002(\0132\016.protocol.Node\"*\n\nN"
      "otifyArgs\022\034\n\004node\030\001 \002(\0132\016.protocol.Node\""
      "\013\n\tNotifyRet\"\026\n\024CheckPredecessorArgs\"\025\n\023"
      "CheckPredecessorRet\"\024\n\022GetPredecessorArg"
      "s\"1\n\021GetPredecessorRet\022\034\n\004node\030\001 \001(\0132\016.p"
      "rotocol.Node\"\026\n\024GetSuccessorListArgs\"9\n\023"
      "GetSuccessorListRet\022\"\n\nsuccessors\030\001 \003(\0132"
      "\016.protocol.Node"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 495);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chord.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chord_2eproto
namespace protocol {

// ===================================================================

void Node::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kAddressFieldNumber;
const int Node::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:protocol.Node)
}

void Node::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:protocol.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_Node.base);
  return *internal_default_instance();
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
  }
  port_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.Node.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // required string address = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.Node.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // required uint32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // required string address = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.Node.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // required uint32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Node)
  return target;
}

size_t Node::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.Node)
  size_t total_size = 0;

  if (has_id()) {
    // required bytes id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->id());
  }

  if (has_address()) {
    // required string address = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  if (has_port()) {
    // required uint32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  return total_size;
}
size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Node)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->id());

    // required string address = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());

    // required uint32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Call::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call::kNameFieldNumber;
const int Call::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call::Call()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_Call.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Call)
}
Call::Call(const Call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_args()) {
    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.Call)
}

void Call::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:protocol.Call)
  SharedDtor();
}

void Call::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Call::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Call& Call::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_Call.base);
  return *internal_default_instance();
}


void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      args_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Call)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.Call.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Call)
  return false;
#undef DO_
}

void Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.Call.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required bytes args = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->args(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Call)
}

::google::protobuf::uint8* Call::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.Call.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required bytes args = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->args(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Call)
  return target;
}

size_t Call::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.Call)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_args()) {
    // required bytes args = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->args());
  }

  return total_size;
}
size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Call)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required bytes args = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->args());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Call* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Call>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Call)
    MergeFrom(*source);
  }
}

void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_args();
      args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
    }
  }
}

void Call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Call::Swap(Call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call::InternalSwap(Call* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  args_.Swap(&other->args_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Call::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Return::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Return::kSuccessFieldNumber;
const int Return::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Return::Return()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_Return.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Return)
}
Return::Return(const Return& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:protocol.Return)
}

void Return::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

Return::~Return() {
  // @@protoc_insertion_point(destructor:protocol.Return)
  SharedDtor();
}

void Return::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Return::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Return::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Return& Return::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_Return.base);
  return *internal_default_instance();
}


void Return::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Return)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Return)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Return)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Return)
  return false;
#undef DO_
}

void Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Return)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Return)
}

::google::protobuf::uint8* Return::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Return)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Return)
  return target;
}

size_t Return::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Return)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  // optional bytes value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Return::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Return)
  GOOGLE_DCHECK_NE(&from, this);
  const Return* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Return>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Return)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Return)
    MergeFrom(*source);
  }
}

void Return::MergeFrom(const Return& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Return)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Return::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Return)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Return::CopyFrom(const Return& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Return)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Return::Swap(Return* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Return::InternalSwap(Return* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Return::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FindSuccessorArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FindSuccessorArgs::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FindSuccessorArgs::FindSuccessorArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_FindSuccessorArgs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.FindSuccessorArgs)
}
FindSuccessorArgs::FindSuccessorArgs(const FindSuccessorArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.FindSuccessorArgs)
}

void FindSuccessorArgs::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FindSuccessorArgs::~FindSuccessorArgs() {
  // @@protoc_insertion_point(destructor:protocol.FindSuccessorArgs)
  SharedDtor();
}

void FindSuccessorArgs::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FindSuccessorArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FindSuccessorArgs::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FindSuccessorArgs& FindSuccessorArgs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_FindSuccessorArgs.base);
  return *internal_default_instance();
}


void FindSuccessorArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.FindSuccessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FindSuccessorArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.FindSuccessorArgs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.FindSuccessorArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.FindSuccessorArgs)
  return false;
#undef DO_
}

void FindSuccessorArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.FindSuccessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.FindSuccessorArgs)
}

::google::protobuf::uint8* FindSuccessorArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.FindSuccessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.FindSuccessorArgs)
  return target;
}

size_t FindSuccessorArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.FindSuccessorArgs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindSuccessorArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.FindSuccessorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const FindSuccessorArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FindSuccessorArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.FindSuccessorArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.FindSuccessorArgs)
    MergeFrom(*source);
  }
}

void FindSuccessorArgs::MergeFrom(const FindSuccessorArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.FindSuccessorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void FindSuccessorArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.FindSuccessorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindSuccessorArgs::CopyFrom(const FindSuccessorArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.FindSuccessorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindSuccessorArgs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void FindSuccessorArgs::Swap(FindSuccessorArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FindSuccessorArgs::InternalSwap(FindSuccessorArgs* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FindSuccessorArgs::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FindSuccessorRet::InitAsDefaultInstance() {
  ::protocol::_FindSuccessorRet_default_instance_._instance.get_mutable()->node_ = const_cast< ::protocol::Node*>(
      ::protocol::Node::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FindSuccessorRet::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FindSuccessorRet::FindSuccessorRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_FindSuccessorRet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.FindSuccessorRet)
}
FindSuccessorRet::FindSuccessorRet(const FindSuccessorRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::protocol::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.FindSuccessorRet)
}

void FindSuccessorRet::SharedCtor() {
  node_ = NULL;
}

FindSuccessorRet::~FindSuccessorRet() {
  // @@protoc_insertion_point(destructor:protocol.FindSuccessorRet)
  SharedDtor();
}

void FindSuccessorRet::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void FindSuccessorRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FindSuccessorRet::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FindSuccessorRet& FindSuccessorRet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_FindSuccessorRet.base);
  return *internal_default_instance();
}


void FindSuccessorRet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.FindSuccessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(node_ != NULL);
    node_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FindSuccessorRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.FindSuccessorRet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.FindSuccessorRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.FindSuccessorRet)
  return false;
#undef DO_
}

void FindSuccessorRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.FindSuccessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.Node node = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_node(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.FindSuccessorRet)
}

::google::protobuf::uint8* FindSuccessorRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.FindSuccessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.Node node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_node(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.FindSuccessorRet)
  return target;
}

size_t FindSuccessorRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.FindSuccessorRet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .protocol.Node node = 1;
  if (has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindSuccessorRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.FindSuccessorRet)
  GOOGLE_DCHECK_NE(&from, this);
  const FindSuccessorRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FindSuccessorRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.FindSuccessorRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.FindSuccessorRet)
    MergeFrom(*source);
  }
}

void FindSuccessorRet::MergeFrom(const FindSuccessorRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.FindSuccessorRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node()) {
    mutable_node()->::protocol::Node::MergeFrom(from.node());
  }
}

void FindSuccessorRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.FindSuccessorRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindSuccessorRet::CopyFrom(const FindSuccessorRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.FindSuccessorRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindSuccessorRet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_node()) {
    if (!this->node_->IsInitialized()) return false;
  }
  return true;
}

void FindSuccessorRet::Swap(FindSuccessorRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FindSuccessorRet::InternalSwap(FindSuccessorRet* other) {
  using std::swap;
  swap(node_, other->node_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FindSuccessorRet::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyArgs::InitAsDefaultInstance() {
  ::protocol::_NotifyArgs_default_instance_._instance.get_mutable()->node_ = const_cast< ::protocol::Node*>(
      ::protocol::Node::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyArgs::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyArgs::NotifyArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_NotifyArgs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.NotifyArgs)
}
NotifyArgs::NotifyArgs(const NotifyArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::protocol::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.NotifyArgs)
}

void NotifyArgs::SharedCtor() {
  node_ = NULL;
}

NotifyArgs::~NotifyArgs() {
  // @@protoc_insertion_point(destructor:protocol.NotifyArgs)
  SharedDtor();
}

void NotifyArgs::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void NotifyArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyArgs::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyArgs& NotifyArgs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_NotifyArgs.base);
  return *internal_default_instance();
}


void NotifyArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.NotifyArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(node_ != NULL);
    node_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.NotifyArgs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.NotifyArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.NotifyArgs)
  return false;
#undef DO_
}

void NotifyArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.NotifyArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.Node node = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_node(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.NotifyArgs)
}

::google::protobuf::uint8* NotifyArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.NotifyArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.Node node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_node(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.NotifyArgs)
  return target;
}

size_t NotifyArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.NotifyArgs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .protocol.Node node = 1;
  if (has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.NotifyArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.NotifyArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.NotifyArgs)
    MergeFrom(*source);
  }
}

void NotifyArgs::MergeFrom(const NotifyArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.NotifyArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node()) {
    mutable_node()->::protocol::Node::MergeFrom(from.node());
  }
}

void NotifyArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.NotifyArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyArgs::CopyFrom(const NotifyArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.NotifyArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyArgs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_node()) {
    if (!this->node_->IsInitialized()) return false;
  }
  return true;
}

void NotifyArgs::Swap(NotifyArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyArgs::InternalSwap(NotifyArgs* other) {
  using std::swap;
  swap(node_, other->node_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyArgs::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyRet::NotifyRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_NotifyRet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.NotifyRet)
}
NotifyRet::NotifyRet(const NotifyRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.NotifyRet)
}

void NotifyRet::SharedCtor() {
}

NotifyRet::~NotifyRet() {
  // @@protoc_insertion_point(destructor:protocol.NotifyRet)
  SharedDtor();
}

void NotifyRet::SharedDtor() {
}

void NotifyRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyRet::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyRet& NotifyRet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_NotifyRet.base);
  return *internal_default_instance();
}


void NotifyRet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.NotifyRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.NotifyRet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.NotifyRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.NotifyRet)
  return false;
#undef DO_
}

void NotifyRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.NotifyRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.NotifyRet)
}

::google::protobuf::uint8* NotifyRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.NotifyRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.NotifyRet)
  return target;
}

size_t NotifyRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.NotifyRet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.NotifyRet)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.NotifyRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.NotifyRet)
    MergeFrom(*source);
  }
}

void NotifyRet::MergeFrom(const NotifyRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.NotifyRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NotifyRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.NotifyRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRet::CopyFrom(const NotifyRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.NotifyRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRet::IsInitialized() const {
  return true;
}

void NotifyRet::Swap(NotifyRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyRet::InternalSwap(NotifyRet* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyRet::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckPredecessorArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPredecessorArgs::CheckPredecessorArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_CheckPredecessorArgs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CheckPredecessorArgs)
}
CheckPredecessorArgs::CheckPredecessorArgs(const CheckPredecessorArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.CheckPredecessorArgs)
}

void CheckPredecessorArgs::SharedCtor() {
}

CheckPredecessorArgs::~CheckPredecessorArgs() {
  // @@protoc_insertion_point(destructor:protocol.CheckPredecessorArgs)
  SharedDtor();
}

void CheckPredecessorArgs::SharedDtor() {
}

void CheckPredecessorArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckPredecessorArgs::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckPredecessorArgs& CheckPredecessorArgs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_CheckPredecessorArgs.base);
  return *internal_default_instance();
}


void CheckPredecessorArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CheckPredecessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckPredecessorArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CheckPredecessorArgs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CheckPredecessorArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CheckPredecessorArgs)
  return false;
#undef DO_
}

void CheckPredecessorArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CheckPredecessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.CheckPredecessorArgs)
}

::google::protobuf::uint8* CheckPredecessorArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CheckPredecessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.CheckPredecessorArgs)
  return target;
}

size_t CheckPredecessorArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CheckPredecessorArgs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckPredecessorArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CheckPredecessorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckPredecessorArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPredecessorArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CheckPredecessorArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CheckPredecessorArgs)
    MergeFrom(*source);
  }
}

void CheckPredecessorArgs::MergeFrom(const CheckPredecessorArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CheckPredecessorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CheckPredecessorArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CheckPredecessorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPredecessorArgs::CopyFrom(const CheckPredecessorArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CheckPredecessorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPredecessorArgs::IsInitialized() const {
  return true;
}

void CheckPredecessorArgs::Swap(CheckPredecessorArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPredecessorArgs::InternalSwap(CheckPredecessorArgs* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckPredecessorArgs::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckPredecessorRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPredecessorRet::CheckPredecessorRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_CheckPredecessorRet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CheckPredecessorRet)
}
CheckPredecessorRet::CheckPredecessorRet(const CheckPredecessorRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.CheckPredecessorRet)
}

void CheckPredecessorRet::SharedCtor() {
}

CheckPredecessorRet::~CheckPredecessorRet() {
  // @@protoc_insertion_point(destructor:protocol.CheckPredecessorRet)
  SharedDtor();
}

void CheckPredecessorRet::SharedDtor() {
}

void CheckPredecessorRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckPredecessorRet::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckPredecessorRet& CheckPredecessorRet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_CheckPredecessorRet.base);
  return *internal_default_instance();
}


void CheckPredecessorRet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CheckPredecessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckPredecessorRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CheckPredecessorRet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CheckPredecessorRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CheckPredecessorRet)
  return false;
#undef DO_
}

void CheckPredecessorRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CheckPredecessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.CheckPredecessorRet)
}

::google::protobuf::uint8* CheckPredecessorRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CheckPredecessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.CheckPredecessorRet)
  return target;
}

size_t CheckPredecessorRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CheckPredecessorRet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckPredecessorRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CheckPredecessorRet)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckPredecessorRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPredecessorRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CheckPredecessorRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CheckPredecessorRet)
    MergeFrom(*source);
  }
}

void CheckPredecessorRet::MergeFrom(const CheckPredecessorRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CheckPredecessorRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CheckPredecessorRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CheckPredecessorRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPredecessorRet::CopyFrom(const CheckPredecessorRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CheckPredecessorRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPredecessorRet::IsInitialized() const {
  return true;
}

void CheckPredecessorRet::Swap(CheckPredecessorRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPredecessorRet::InternalSwap(CheckPredecessorRet* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckPredecessorRet::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPredecessorArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPredecessorArgs::GetPredecessorArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_GetPredecessorArgs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.GetPredecessorArgs)
}
GetPredecessorArgs::GetPredecessorArgs(const GetPredecessorArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.GetPredecessorArgs)
}

void GetPredecessorArgs::SharedCtor() {
}

GetPredecessorArgs::~GetPredecessorArgs() {
  // @@protoc_insertion_point(destructor:protocol.GetPredecessorArgs)
  SharedDtor();
}

void GetPredecessorArgs::SharedDtor() {
}

void GetPredecessorArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPredecessorArgs::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPredecessorArgs& GetPredecessorArgs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_GetPredecessorArgs.base);
  return *internal_default_instance();
}


void GetPredecessorArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.GetPredecessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetPredecessorArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.GetPredecessorArgs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.GetPredecessorArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.GetPredecessorArgs)
  return false;
#undef DO_
}

void GetPredecessorArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.GetPredecessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.GetPredecessorArgs)
}

::google::protobuf::uint8* GetPredecessorArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.GetPredecessorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.GetPredecessorArgs)
  return target;
}

size_t GetPredecessorArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.GetPredecessorArgs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPredecessorArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.GetPredecessorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPredecessorArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPredecessorArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.GetPredecessorArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.GetPredecessorArgs)
    MergeFrom(*source);
  }
}

void GetPredecessorArgs::MergeFrom(const GetPredecessorArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.GetPredecessorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPredecessorArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.GetPredecessorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPredecessorArgs::CopyFrom(const GetPredecessorArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.GetPredecessorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPredecessorArgs::IsInitialized() const {
  return true;
}

void GetPredecessorArgs::Swap(GetPredecessorArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPredecessorArgs::InternalSwap(GetPredecessorArgs* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPredecessorArgs::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPredecessorRet::InitAsDefaultInstance() {
  ::protocol::_GetPredecessorRet_default_instance_._instance.get_mutable()->node_ = const_cast< ::protocol::Node*>(
      ::protocol::Node::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPredecessorRet::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPredecessorRet::GetPredecessorRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_GetPredecessorRet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.GetPredecessorRet)
}
GetPredecessorRet::GetPredecessorRet(const GetPredecessorRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::protocol::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.GetPredecessorRet)
}

void GetPredecessorRet::SharedCtor() {
  node_ = NULL;
}

GetPredecessorRet::~GetPredecessorRet() {
  // @@protoc_insertion_point(destructor:protocol.GetPredecessorRet)
  SharedDtor();
}

void GetPredecessorRet::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void GetPredecessorRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPredecessorRet::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPredecessorRet& GetPredecessorRet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_GetPredecessorRet.base);
  return *internal_default_instance();
}


void GetPredecessorRet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.GetPredecessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(node_ != NULL);
    node_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetPredecessorRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.GetPredecessorRet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protocol.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.GetPredecessorRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.GetPredecessorRet)
  return false;
#undef DO_
}

void GetPredecessorRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.GetPredecessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .protocol.Node node = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_node(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.GetPredecessorRet)
}

::google::protobuf::uint8* GetPredecessorRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.GetPredecessorRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .protocol.Node node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_node(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.GetPredecessorRet)
  return target;
}

size_t GetPredecessorRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.GetPredecessorRet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .protocol.Node node = 1;
  if (has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPredecessorRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.GetPredecessorRet)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPredecessorRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPredecessorRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.GetPredecessorRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.GetPredecessorRet)
    MergeFrom(*source);
  }
}

void GetPredecessorRet::MergeFrom(const GetPredecessorRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.GetPredecessorRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node()) {
    mutable_node()->::protocol::Node::MergeFrom(from.node());
  }
}

void GetPredecessorRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.GetPredecessorRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPredecessorRet::CopyFrom(const GetPredecessorRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.GetPredecessorRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPredecessorRet::IsInitialized() const {
  if (has_node()) {
    if (!this->node_->IsInitialized()) return false;
  }
  return true;
}

void GetPredecessorRet::Swap(GetPredecessorRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPredecessorRet::InternalSwap(GetPredecessorRet* other) {
  using std::swap;
  swap(node_, other->node_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPredecessorRet::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSuccessorListArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSuccessorListArgs::GetSuccessorListArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_GetSuccessorListArgs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.GetSuccessorListArgs)
}
GetSuccessorListArgs::GetSuccessorListArgs(const GetSuccessorListArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.GetSuccessorListArgs)
}

void GetSuccessorListArgs::SharedCtor() {
}

GetSuccessorListArgs::~GetSuccessorListArgs() {
  // @@protoc_insertion_point(destructor:protocol.GetSuccessorListArgs)
  SharedDtor();
}

void GetSuccessorListArgs::SharedDtor() {
}

void GetSuccessorListArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSuccessorListArgs::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSuccessorListArgs& GetSuccessorListArgs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_GetSuccessorListArgs.base);
  return *internal_default_instance();
}


void GetSuccessorListArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.GetSuccessorListArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSuccessorListArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.GetSuccessorListArgs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.GetSuccessorListArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.GetSuccessorListArgs)
  return false;
#undef DO_
}

void GetSuccessorListArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.GetSuccessorListArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.GetSuccessorListArgs)
}

::google::protobuf::uint8* GetSuccessorListArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.GetSuccessorListArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.GetSuccessorListArgs)
  return target;
}

size_t GetSuccessorListArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.GetSuccessorListArgs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSuccessorListArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.GetSuccessorListArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSuccessorListArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSuccessorListArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.GetSuccessorListArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.GetSuccessorListArgs)
    MergeFrom(*source);
  }
}

void GetSuccessorListArgs::MergeFrom(const GetSuccessorListArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.GetSuccessorListArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetSuccessorListArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.GetSuccessorListArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSuccessorListArgs::CopyFrom(const GetSuccessorListArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.GetSuccessorListArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuccessorListArgs::IsInitialized() const {
  return true;
}

void GetSuccessorListArgs::Swap(GetSuccessorListArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSuccessorListArgs::InternalSwap(GetSuccessorListArgs* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSuccessorListArgs::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSuccessorListRet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSuccessorListRet::kSuccessorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSuccessorListRet::GetSuccessorListRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chord_2eproto::scc_info_GetSuccessorListRet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.GetSuccessorListRet)
}
GetSuccessorListRet::GetSuccessorListRet(const GetSuccessorListRet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      successors_(from.successors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.GetSuccessorListRet)
}

void GetSuccessorListRet::SharedCtor() {
}

GetSuccessorListRet::~GetSuccessorListRet() {
  // @@protoc_insertion_point(destructor:protocol.GetSuccessorListRet)
  SharedDtor();
}

void GetSuccessorListRet::SharedDtor() {
}

void GetSuccessorListRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSuccessorListRet::descriptor() {
  ::protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSuccessorListRet& GetSuccessorListRet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chord_2eproto::scc_info_GetSuccessorListRet.base);
  return *internal_default_instance();
}


void GetSuccessorListRet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.GetSuccessorListRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  successors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSuccessorListRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.GetSuccessorListRet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.Node successors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_successors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.GetSuccessorListRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.GetSuccessorListRet)
  return false;
#undef DO_
}

void GetSuccessorListRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.GetSuccessorListRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Node successors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->successors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->successors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.GetSuccessorListRet)
}

::google::protobuf::uint8* GetSuccessorListRet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.GetSuccessorListRet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.Node successors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->successors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->successors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.GetSuccessorListRet)
  return target;
}

size_t GetSuccessorListRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.GetSuccessorListRet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .protocol.Node successors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->successors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->successors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSuccessorListRet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.GetSuccessorListRet)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSuccessorListRet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSuccessorListRet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.GetSuccessorListRet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.GetSuccessorListRet)
    MergeFrom(*source);
  }
}

void GetSuccessorListRet::MergeFrom(const GetSuccessorListRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.GetSuccessorListRet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  successors_.MergeFrom(from.successors_);
}

void GetSuccessorListRet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.GetSuccessorListRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSuccessorListRet::CopyFrom(const GetSuccessorListRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.GetSuccessorListRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuccessorListRet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->successors())) return false;
  return true;
}

void GetSuccessorListRet::Swap(GetSuccessorListRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSuccessorListRet::InternalSwap(GetSuccessorListRet* other) {
  using std::swap;
  CastToBase(&successors_)->InternalSwap(CastToBase(&other->successors_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSuccessorListRet::GetMetadata() const {
  protobuf_chord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::Node* Arena::CreateMaybeMessage< ::protocol::Node >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::Call* Arena::CreateMaybeMessage< ::protocol::Call >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::Call >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::Return* Arena::CreateMaybeMessage< ::protocol::Return >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::Return >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::FindSuccessorArgs* Arena::CreateMaybeMessage< ::protocol::FindSuccessorArgs >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::FindSuccessorArgs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::FindSuccessorRet* Arena::CreateMaybeMessage< ::protocol::FindSuccessorRet >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::FindSuccessorRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::NotifyArgs* Arena::CreateMaybeMessage< ::protocol::NotifyArgs >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::NotifyArgs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::NotifyRet* Arena::CreateMaybeMessage< ::protocol::NotifyRet >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::NotifyRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::CheckPredecessorArgs* Arena::CreateMaybeMessage< ::protocol::CheckPredecessorArgs >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::CheckPredecessorArgs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::CheckPredecessorRet* Arena::CreateMaybeMessage< ::protocol::CheckPredecessorRet >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::CheckPredecessorRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::GetPredecessorArgs* Arena::CreateMaybeMessage< ::protocol::GetPredecessorArgs >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::GetPredecessorArgs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::GetPredecessorRet* Arena::CreateMaybeMessage< ::protocol::GetPredecessorRet >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::GetPredecessorRet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::GetSuccessorListArgs* Arena::CreateMaybeMessage< ::protocol::GetSuccessorListArgs >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::GetSuccessorListArgs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::GetSuccessorListRet* Arena::CreateMaybeMessage< ::protocol::GetSuccessorListRet >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::GetSuccessorListRet >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
